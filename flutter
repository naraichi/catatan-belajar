*MaterialApp adalah widget paling utama yang akan diakses pertama kali oleh fungsi main().
*Scaffold adalah widget utama yakni sebagai wadah untuk semua widget lainnya seperti AppBar, Body, BottomNavigationBar, FloatingActionButton, dll
3 klasifikasi widget dibawah scaffold :
- standalone widget, - single child widget, - multiple children widget
*Standalone widget adalah jenis widget yang tidak mengandung widget lain. biasanya digunakan oleh widget lainnya untuk mengisi konten dan styling properti.
contoh widget: appbar, imageasset, icon, text, textstyle
*Singel child widget adalah widget yang hanya dapat memiliki SATU widget di dalamnya.
Tipe widget ini memiliki properti yang bernama “child” digunakan untuk memasukan widget lain kedalam single child widget.
Contoh dari single child widget yaitu :Center, Container, Expanded, CircleAvatar, RaisedButton, dll
*Multiple children widget adalah widget yang memiliki lebih dari satu widget di dalamnya dengan menggunakan properti "children".
contoh : Row, Column, GridView, Stack, dll
============================================================
*Stateless Widget dapat diartikan sebagai Widget yang tidak dapat dirubah atau tidak akan pernah berubah.
*Stateless Widget adalah widget dinamis atau dapat berubah. 
sumber : https://belajarflutter.com/kumpulan-tutorial-flutter-untuk-pemula/
============================================================	
  
daftar widget :
- MaterialApp()
- Scaffold() ==> tampilan dasar widget android, yg memiliki widget setidaknya appbar dan body
- AppBar()
- Text() ==> text/string
- Center() ==> membuat widget jadi di tengah layar
- Container() ==> u/ membungkus widget yg lain sehingga dapat memberikan margin, padding, bg , gradien

#widget dasar
1. Text() ==> text/string, memiliki banyak properti salah satunya :
  -- maxLines: 2, #membuat maximal 2 baris text
  -- overflow: TextOverflow.ellipsis, #membuat ... pada akhir kata yg terputus
  -- textAlign: TextAlign.center, #text center

2. Colomn ==> mengatur widget yg ada dalam colomn yaitu widget dari atas kebawah (vertikal)
   -- mainAxisAlignment : mengatur aligment secara vertikal 
   -- crossAxisAlignment : mengatur aligment colomn secara horizontal
3. Row ==> mengatur widget yg ada dalam colomn yaitu widget dari kiri ke kanan (horizontal)
ctt: bisa menggunakan kombinasi colomn di dalam row atau sebaliknya
4. Container ==> property yg ada pada container
    -- margin ==> mengatur jarak widget ke luar
    ex - margin: EdgeInsets.fromLTRB(left, top, right, bottom)
       - margin: EdgeInsets.all(10),
    -- padding ==> mengatur jarak widget ke dalam
    ex - padding: EdgeInsets.only(bottom: 20) //mengatur hanya bagian atas/bawah
    -- boxdecoration
    ex - decoration: BoxDecoration(
           borderRadius: BorderRadius.circular(20), //membuat border
           gradient: LinearGradient(colors: <Color>[Colors.green, Colors.blue], begin: Alignment.topLeft, end: Alignment.bottomRight) //gradient
          ),
5. STACK => menyusun widget menumpuk (kedepan)
6. align => mengatur posisi widget dengan properti alignment :
